// Generated by view binder compiler. Do not edit!
package com.example.branchinternational.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.branchinternational.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySendingMessageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button bottonSendandresolve;

  @NonNull
  public final TextInputEditText edreply;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final RecyclerView recyclerviewmessageSending;

  @NonNull
  public final TextInputLayout replttextfield;

  @NonNull
  public final ScrollView scroll;

  private ActivitySendingMessageBinding(@NonNull RelativeLayout rootView,
      @NonNull Button bottonSendandresolve, @NonNull TextInputEditText edreply,
      @NonNull ProgressBar progressbar, @NonNull RecyclerView recyclerviewmessageSending,
      @NonNull TextInputLayout replttextfield, @NonNull ScrollView scroll) {
    this.rootView = rootView;
    this.bottonSendandresolve = bottonSendandresolve;
    this.edreply = edreply;
    this.progressbar = progressbar;
    this.recyclerviewmessageSending = recyclerviewmessageSending;
    this.replttextfield = replttextfield;
    this.scroll = scroll;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySendingMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySendingMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sending_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySendingMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.botton_sendandresolve;
      Button bottonSendandresolve = ViewBindings.findChildViewById(rootView, id);
      if (bottonSendandresolve == null) {
        break missingId;
      }

      id = R.id.edreply;
      TextInputEditText edreply = ViewBindings.findChildViewById(rootView, id);
      if (edreply == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.recyclerviewmessage_sending;
      RecyclerView recyclerviewmessageSending = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewmessageSending == null) {
        break missingId;
      }

      id = R.id.replttextfield;
      TextInputLayout replttextfield = ViewBindings.findChildViewById(rootView, id);
      if (replttextfield == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      return new ActivitySendingMessageBinding((RelativeLayout) rootView, bottonSendandresolve,
          edreply, progressbar, recyclerviewmessageSending, replttextfield, scroll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
